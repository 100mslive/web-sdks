name: Web Automation Tests

on:
  workflow_dispatch:
    inputs:
      region:
        description: "Region to run the test for"
        required: true
        default: "qa-in"
  schedule:
    # qa-in
    - cron: "0 9 * * *"
    # qa-us
    - cron: "10 9 * * *"
    # prod-in
    - cron: "20 9 * * *"
    # prod-us
    - cron: "30 9 * * *"
    # prod-eu
    - cron: "40 9 * * *"

  push:
    branches: [main]
  pull_request:
    branches: [main]
  repository_dispatch:
    types: [automation]

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      # Figure out the region where test needs to be run

      - name: Input from workflow dispatch
        if: github.event_name == 'workflow_dispatch'
        run: echo "REGION=${{ github.event.inputs.region }}" >> $GITHUB_ENV

      - name: Test on QA-IN when push
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        run: echo "REGION=qa-in" >> $GITHUB_ENV
        
      - name: (From Cron) QA-IN
        if: github.event.schedule == '0 9 * * *'
        run: echo "REGION=qa-in" >> $GITHUB_ENV
      
      - name: (From Cron) QA-US
        if: github.event.schedule == '10 9 * * *'
        run: echo "REGION=qa-us" >> $GITHUB_ENV

      - name: (From Cron) PROD-IN
        if: github.event.schedule == '20 9 * * *'
        run: echo "REGION=prod-in" >> $GITHUB_ENV

      - name: (From Cron) PROD-US
        if: github.event.schedule == '30 9 * * *'
        run: echo "REGION=prod-us" >> $GITHUB_ENV

      - name: (From Cron) PROD-EU
        if: github.event.schedule == '40 9 * * *'
        run: echo "REGION=prod-eu" >> $GITHUB_ENV

      - name: print selected region
        run: echo "selected region for test = ${{ env.REGION }}"

      # Run test in the above selected region

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "17.x"
      - run: yarn install
      - run: npx playwright install

      - name: Test in Region - "${{ env.REGION }}"
        run: yarn "${{ env.REGION }}"

      - name: Push test result
        if: always()
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: "playwright-report"
          destination-github-username: "100mslive"
          destination-repository-name: "automation-reports"
          target-branch: "${{ env.REGION }}"
          target-directory: "web"
          user-name: "github-actions[bot]"
          user-email: 41898282+github-actions[bot]@users.noreply.github.com

      - name: Send custom test result
        if: always()
        id: slack
        uses: slackapi/slack-github-action@v1.19.0
        with:
          payload-file-path: "./slackMessage.json"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK